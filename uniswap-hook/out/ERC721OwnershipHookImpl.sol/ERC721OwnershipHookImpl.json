{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "poolManager",
          "type": "address"
        },
        {
          "internalType": "contract IERC721",
          "name": "nftAddress",
          "type": "address"
        },
        {
          "internalType": "contract ERC721OwnershipHook",
          "name": "addressToEtch",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hooks",
          "type": "address"
        }
      ],
      "name": "HookAddressNotValid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "HookNotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPool",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "LockFailure",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotNftOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotPoolManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotSelf",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterDonate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        },
        {
          "internalType": "int24",
          "name": "",
          "type": "int24"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterInitialize",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterModifyPosition",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "BalanceDelta",
          "name": "",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "afterSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeDonate",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "uint160",
          "name": "",
          "type": "uint160"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeInitialize",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "int24",
              "name": "tickLower",
              "type": "int24"
            },
            {
              "internalType": "int24",
              "name": "tickUpper",
              "type": "int24"
            },
            {
              "internalType": "int256",
              "name": "liquidityDelta",
              "type": "int256"
            }
          ],
          "internalType": "struct IPoolManager.ModifyPositionParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeModifyPosition",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "beforeSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "Currency",
              "name": "currency0",
              "type": "address"
            },
            {
              "internalType": "Currency",
              "name": "currency1",
              "type": "address"
            },
            {
              "internalType": "uint24",
              "name": "fee",
              "type": "uint24"
            },
            {
              "internalType": "int24",
              "name": "tickSpacing",
              "type": "int24"
            },
            {
              "internalType": "contract IHooks",
              "name": "hooks",
              "type": "address"
            }
          ],
          "internalType": "struct PoolKey",
          "name": "",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "zeroForOne",
              "type": "bool"
            },
            {
              "internalType": "int256",
              "name": "amountSpecified",
              "type": "int256"
            },
            {
              "internalType": "uint160",
              "name": "sqrtPriceLimitX96",
              "type": "uint160"
            }
          ],
          "internalType": "struct IPoolManager.SwapParams",
          "name": "",
          "type": "tuple"
        }
      ],
      "name": "beforeSwap",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHooksCalls",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "beforeInitialize",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterInitialize",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeModifyPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterModifyPosition",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeSwap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterSwap",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "beforeDonate",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "afterDonate",
              "type": "bool"
            }
          ],
          "internalType": "struct Hooks.Calls",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "lockAcquired",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolManager",
      "outputs": [
        {
          "internalType": "contract IPoolManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b50604051610b23380380610b2383398101604081905261002f916101ec565b6001600160a01b03831660805282826001600160a01b031660a052506100dd816100d86040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252600080825260208201819052918101829052606081018290526001608082015260a0810182905260c0810182905260e081019190915290565b6100e8565b505050610239565b50565b805115156001609f1b831615151415806101105750602081015115156001609e1b8316151514155b806101295750604081015115156001609d1b8316151514155b806101425750606081015115156001609c1b8316151514155b8061015b5750608081015115156001609b1b8316151514155b80610174575060a081015115156001609a1b8316151514155b8061018d575060c08101511515600160991b8316151514155b806101a6575060e08101511515600160981b8316151514155b156101d357604051630732d7b560e51b81526001600160a01b038316600482015260240160405180910390fd5b5050565b6001600160a01b03811681146100e557600080fd5b60008060006060848603121561020157600080fd5b835161020c816101d7565b602085015190935061021d816101d7565b604085015190925061022e816101d7565b809150509250925092565b60805160a0516108b761026c6000396000818161020b015261039701526000818161024a015261029401526108b76000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b3f97f801161008c578063d56d229d11610066578063d56d229d14610206578063dc4c90d314610245578063e1b4af69146101f8578063fe9a6f451461011357600080fd5b8063b3f97f80146101e5578063b47b2fb1146100d4578063b6a8b0fa146101f857600080fd5b806330b7cdef146100d45780633440d82014610105578063575e24b414610113578063612c39b714610121578063a910f80f146101b7578063ab6291fe146101c5575b600080fd5b6100e76100e23660046104bf565b61026c565b6040516001600160e01b031990911681526020015b60405180910390f35b6100e76100e2366004610545565b6100e76100e23660046105c1565b6101aa6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252600080825260208201819052918101829052606081018290526001608082015260a0810182905260c0810182905260e081019190915290565b6040516100fc9190610620565b6100e76100e23660046106a9565b6101d86101d3366004610721565b610287565b6040516100fc9190610763565b6100e76101f33660046107b1565b610375565b6100e76100e23660046107f9565b61022d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fc565b61022d7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102d25760405163570c108560e11b815260040160405180910390fd5b600080306001600160a01b031685856040516102ef929190610858565b6000604051808303816000865af19150503d806000811461032c576040519150601f19603f3d011682016040523d82523d6000602084013e610331565b606091505b5091509150811561034557915061036f9050565b8051600003610367576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b92915050565b6040516370a0823160e01b81526001600160a01b0384811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190610868565b60000361042457604051634b64ae4760e01b815260040160405180910390fd5b506315d7892d60e21b9392505050565b6001600160a01b038116811461044957600080fd5b50565b600060a0828403121561045e57600080fd5b50919050565b60006060828403121561045e57600080fd5b60008083601f84011261048857600080fd5b50813567ffffffffffffffff8111156104a057600080fd5b6020830191508360208285010111156104b857600080fd5b9250929050565b60008060008060008061016087890312156104d957600080fd5b86356104e481610434565b95506104f3886020890161044c565b94506105028860c08901610464565b9350610120870135925061014087013567ffffffffffffffff81111561052757600080fd5b61053389828a01610476565b979a9699509497509295939492505050565b6000806000806000610100868803121561055e57600080fd5b853561056981610434565b9450610578876020880161044c565b935060c086013561058881610434565b925060e086013567ffffffffffffffff8111156105a457600080fd5b6105b088828901610476565b969995985093965092949392505050565b600080600080600061014086880312156105da57600080fd5b85356105e581610434565b94506105f4876020880161044c565b93506106038760c08801610464565b925061012086013567ffffffffffffffff8111156105a457600080fd5b6000610100820190508251151582526020830151151560208301526040830151151560408301526060830151151560608301526080830151610666608084018215159052565b5060a083015161067a60a084018215159052565b5060c083015161068e60c084018215159052565b5060e08301516106a260e084018215159052565b5092915050565b60008060008060008061012087890312156106c357600080fd5b86356106ce81610434565b95506106dd886020890161044c565b945060c08701356106ed81610434565b935060e0870135600281900b811461070457600080fd5b925061010087013567ffffffffffffffff81111561052757600080fd5b6000806020838503121561073457600080fd5b823567ffffffffffffffff81111561074b57600080fd5b61075785828601610476565b90969095509350505050565b600060208083528351808285015260005b8181101561079057858101830151858201604001528201610774565b506000604082860101526040601f19601f8301168501019250505092915050565b600080600061012084860312156107c757600080fd5b83356107d281610434565b92506107e1856020860161044c565b91506107f08560c08601610464565b90509250925092565b600080600080600080610120878903121561081357600080fd5b863561081e81610434565b955061082d886020890161044c565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561052757600080fd5b8183823760009101908152919050565b60006020828403121561087a57600080fd5b505191905056fea264697066735822122000d2f0abf61a75f0c841f7b5b103df2bfb71c62e5ffdb17d8193bfad4b4a0fd064736f6c63430008140033",
    "sourceMap": "434:418:27:-:0;;;496:242;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;764:26:22;;;;639:11:27;652:10;-1:-1:-1;;;;;713:26:26::1;;::::0;-1:-1:-1;674:57:27::1;700:13:::0;715:15:::1;434:418:::0;;;;;;;;-1:-1:-1;434:418:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;856:338:26;;;;;;;;-1:-1:-1;856:338:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:449;715:15:27::1;674:25;:57::i;:::-;496:242:::0;;;434:418;;780:70;;:::o;1930:726:9:-;2033:22;;:58;;-1:-1:-1;;;3448:56:9;;:61;;2033:58;;;:134;;-1:-1:-1;2111:21:9;;;;:56;;-1:-1:-1;;;3616:55:9;;:60;;2111:56;;2033:134;:220;;;-1:-1:-1;2187:26:9;;;;:66;;-1:-1:-1;;;3788:61:9;;:66;;2187;;2033:220;:304;;;-1:-1:-1;2273:25:9;;;;:64;;-1:-1:-1;;;3965:60:9;;:65;;2273:64;;2033:304;:370;;;-1:-1:-1;2357:16:9;;;;:46;;-1:-1:-1;;;4132:50:9;;:55;;2357:46;;2033:370;:418;;;-1:-1:-1;2407:15:9;;;;:44;;-1:-1:-1;;;4288:49:9;;:54;;2407:44;;2033:418;:488;;;-1:-1:-1;2471:18:9;;;;:50;;-1:-1:-1;;;4446:52:9;;:57;;2471:50;;2033:488;:540;;;-1:-1:-1;2525:17:9;;;;:48;;-1:-1:-1;;;4606:51:9;;:56;;2525:48;;2033:540;2016:634;;;2605:34;;-1:-1:-1;;;2605:34:9;;-1:-1:-1;;;;;958:32:28;;2605:34:9;;;940:51:28;913:18;;2605:34:9;;;;;;;2016:634;1930:726;;:::o;14:145:28:-;-1:-1:-1;;;;;103:31:28;;93:42;;83:70;;149:1;146;139:12;164:625;316:6;324;332;385:2;373:9;364:7;360:23;356:32;353:52;;;401:1;398;391:12;353:52;433:9;427:16;452:45;491:5;452:45;:::i;:::-;566:2;551:18;;545:25;516:5;;-1:-1:-1;579:47:28;545:25;579:47;:::i;:::-;697:2;682:18;;676:25;645:7;;-1:-1:-1;710:47:28;676:25;710:47;:::i;:::-;776:7;766:17;;;164:625;;;;;:::o;794:203::-;434:418:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b3f97f801161008c578063d56d229d11610066578063d56d229d14610206578063dc4c90d314610245578063e1b4af69146101f8578063fe9a6f451461011357600080fd5b8063b3f97f80146101e5578063b47b2fb1146100d4578063b6a8b0fa146101f857600080fd5b806330b7cdef146100d45780633440d82014610105578063575e24b414610113578063612c39b714610121578063a910f80f146101b7578063ab6291fe146101c5575b600080fd5b6100e76100e23660046104bf565b61026c565b6040516001600160e01b031990911681526020015b60405180910390f35b6100e76100e2366004610545565b6100e76100e23660046105c1565b6101aa6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810191909152506040805161010081018252600080825260208201819052918101829052606081018290526001608082015260a0810182905260c0810182905260e081019190915290565b6040516100fc9190610620565b6100e76100e23660046106a9565b6101d86101d3366004610721565b610287565b6040516100fc9190610763565b6100e76101f33660046107b1565b610375565b6100e76100e23660046107f9565b61022d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100fc565b61022d7f000000000000000000000000000000000000000000000000000000000000000081565b6000604051630a85dc2960e01b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102d25760405163570c108560e11b815260040160405180910390fd5b600080306001600160a01b031685856040516102ef929190610858565b6000604051808303816000865af19150503d806000811461032c576040519150601f19603f3d011682016040523d82523d6000602084013e610331565b606091505b5091509150811561034557915061036f9050565b8051600003610367576040516314815f4760e31b815260040160405180910390fd5b805160208201fd5b92915050565b6040516370a0823160e01b81526001600160a01b0384811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156103e0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104049190610868565b60000361042457604051634b64ae4760e01b815260040160405180910390fd5b506315d7892d60e21b9392505050565b6001600160a01b038116811461044957600080fd5b50565b600060a0828403121561045e57600080fd5b50919050565b60006060828403121561045e57600080fd5b60008083601f84011261048857600080fd5b50813567ffffffffffffffff8111156104a057600080fd5b6020830191508360208285010111156104b857600080fd5b9250929050565b60008060008060008061016087890312156104d957600080fd5b86356104e481610434565b95506104f3886020890161044c565b94506105028860c08901610464565b9350610120870135925061014087013567ffffffffffffffff81111561052757600080fd5b61053389828a01610476565b979a9699509497509295939492505050565b6000806000806000610100868803121561055e57600080fd5b853561056981610434565b9450610578876020880161044c565b935060c086013561058881610434565b925060e086013567ffffffffffffffff8111156105a457600080fd5b6105b088828901610476565b969995985093965092949392505050565b600080600080600061014086880312156105da57600080fd5b85356105e581610434565b94506105f4876020880161044c565b93506106038760c08801610464565b925061012086013567ffffffffffffffff8111156105a457600080fd5b6000610100820190508251151582526020830151151560208301526040830151151560408301526060830151151560608301526080830151610666608084018215159052565b5060a083015161067a60a084018215159052565b5060c083015161068e60c084018215159052565b5060e08301516106a260e084018215159052565b5092915050565b60008060008060008061012087890312156106c357600080fd5b86356106ce81610434565b95506106dd886020890161044c565b945060c08701356106ed81610434565b935060e0870135600281900b811461070457600080fd5b925061010087013567ffffffffffffffff81111561052757600080fd5b6000806020838503121561073457600080fd5b823567ffffffffffffffff81111561074b57600080fd5b61075785828601610476565b90969095509350505050565b600060208083528351808285015260005b8181101561079057858101830151858201604001528201610774565b506000604082860101526040601f19601f8301168501019250505092915050565b600080600061012084860312156107c757600080fd5b83356107d281610434565b92506107e1856020860161044c565b91506107f08560c08601610464565b90509250925092565b600080600080600080610120878903121561081357600080fd5b863561081e81610434565b955061082d886020890161044c565b945060c0870135935060e0870135925061010087013567ffffffffffffffff81111561052757600080fd5b8183823760009101908152919050565b60006020828403121561087a57600080fd5b505191905056fea264697066735822122000d2f0abf61a75f0c841f7b5b103df2bfb71c62e5ffdb17d8193bfad4b4a0fd064736f6c63430008140033",
    "sourceMap": "434:418:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2842:254:22;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1929:33:28;;;1911:52;;1899:2;1884:18;2842:254:22;;;;;;;;2255:156;;;;;;:::i;3102:203::-;;;;;;:::i;752:449:26:-;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;856:338:26;;;;;;;;-1:-1:-1;856:338:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;752:449;;;;;;;;:::i;2417:190:22:-;;;;;;:::i;1786:463::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1207:291:26:-;;;;;;:::i;:::-;;:::i;3533:189:22:-;;;;;;:::i;528:36:26:-;;;;;;;;-1:-1:-1;;;;;9052:32:28;;;9034:51;;9022:2;9007:18;528:36:26;8872:219:28;667:41:22;;;;;2842:254;3044:6;3069:20;;-1:-1:-1;;;3069:20:22;;;;;;;;;;;1786:463;1871:12;937:10;-1:-1:-1;;;;;959:11:22;937:34;;933:63;;980:16;;-1:-1:-1;;;980:16:22;;;;;;;;;;;933:63;1896:12:::1;1910:23:::0;1945:4:::1;-1:-1:-1::0;;;;;1937:18:22::1;1956:4;;1937:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1895:66;;;;1975:7;1971:30;;;1991:10:::0;-1:-1:-1;1984:17:22::1;::::0;-1:-1:-1;1984:17:22::1;1971:30;2015:10;:17;2036:1;2015:22:::0;2011:48:::1;;2046:13;;-1:-1:-1::0;;;2046:13:22::1;;;;;;;;;;;2011:48;2221:10;2215:17;2210:2;2198:10;2194:19;2187:46;1006:1;1786:463:::0;;;;:::o;1207:291:26:-;1365:29;;-1:-1:-1;;;1365:29:26;;-1:-1:-1;;;;;9052:32:28;;;1365:29:26;;;9034:51:28;1343:6:26;;1365:11;:21;;;;;;9007:18:28;;1365:29:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1398:1;1365:34;1361:85;;1422:13;;-1:-1:-1;;;1422:13:26;;;;;;;;;;;1361:85;-1:-1:-1;;;;1207:291:26;;;;;:::o;14:131:28:-;-1:-1:-1;;;;;89:31:28;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:156::-;210:5;255:3;246:6;241:3;237:16;233:26;230:46;;;272:1;269;262:12;230:46;-1:-1:-1;294:6:28;150:156;-1:-1:-1;150:156:28:o;311:168::-;384:5;429:2;420:6;415:3;411:16;407:25;404:45;;;445:1;442;435:12;484:347;535:8;545:6;599:3;592:4;584:6;580:17;576:27;566:55;;617:1;614;607:12;566:55;-1:-1:-1;640:20:28;;683:18;672:30;;669:50;;;715:1;712;705:12;669:50;752:4;744:6;740:17;728:29;;804:3;797:4;788:6;780;776:19;772:30;769:39;766:59;;;821:1;818;811:12;766:59;484:347;;;;;:::o;836:926::-;1041:6;1049;1057;1065;1073;1081;1134:3;1122:9;1113:7;1109:23;1105:33;1102:53;;;1151:1;1148;1141:12;1102:53;1190:9;1177:23;1209:31;1234:5;1209:31;:::i;:::-;1259:5;-1:-1:-1;1283:63:28;1338:7;1333:2;1318:18;;1283:63;:::i;:::-;1273:73;;1365:77;1434:7;1428:3;1417:9;1413:19;1365:77;:::i;:::-;1355:87;;1489:3;1478:9;1474:19;1461:33;1451:43;;1545:3;1534:9;1530:19;1517:33;1573:18;1565:6;1562:30;1559:50;;;1605:1;1602;1595:12;1559:50;1644:58;1694:7;1685:6;1674:9;1670:22;1644:58;:::i;:::-;836:926;;;;-1:-1:-1;836:926:28;;-1:-1:-1;836:926:28;;1721:8;;836:926;-1:-1:-1;;;836:926:28:o;1974:814::-;2098:6;2106;2114;2122;2130;2183:3;2171:9;2162:7;2158:23;2154:33;2151:53;;;2200:1;2197;2190:12;2151:53;2239:9;2226:23;2258:31;2283:5;2258:31;:::i;:::-;2308:5;-1:-1:-1;2332:63:28;2387:7;2382:2;2367:18;;2332:63;:::i;:::-;2322:73;;2447:3;2436:9;2432:19;2419:33;2461;2486:7;2461:33;:::i;:::-;2513:7;-1:-1:-1;2571:3:28;2556:19;;2543:33;2599:18;2588:30;;2585:50;;;2631:1;2628;2621:12;2585:50;2670:58;2720:7;2711:6;2700:9;2696:22;2670:58;:::i;:::-;1974:814;;;;-1:-1:-1;1974:814:28;;-1:-1:-1;2747:8:28;;2644:84;1974:814;-1:-1:-1;;;1974:814:28:o;2793:::-;2946:6;2954;2962;2970;2978;3031:3;3019:9;3010:7;3006:23;3002:33;2999:53;;;3048:1;3045;3038:12;2999:53;3087:9;3074:23;3106:31;3131:5;3106:31;:::i;:::-;3156:5;-1:-1:-1;3180:63:28;3235:7;3230:2;3215:18;;3180:63;:::i;:::-;3170:73;;3262:77;3331:7;3325:3;3314:9;3310:19;3262:77;:::i;:::-;3252:87;;3390:3;3379:9;3375:19;3362:33;3418:18;3410:6;3407:30;3404:50;;;3450:1;3447;3440:12;3708:948;3846:4;3888:3;3877:9;3873:19;3865:27;;3939:6;3933:13;3926:21;3919:29;3908:9;3901:48;4019:4;4011:6;4007:17;4001:24;3994:32;3987:40;3980:4;3969:9;3965:20;3958:70;4098:4;4090:6;4086:17;4080:24;4073:32;4066:40;4059:4;4048:9;4044:20;4037:70;4177:4;4169:6;4165:17;4159:24;4152:32;4145:40;4138:4;4127:9;4123:20;4116:70;4233:4;4225:6;4221:17;4215:24;4248:51;4293:4;4282:9;4278:20;4264:12;3682:13;3675:21;3663:34;;3612:91;4248:51;;4348:4;4340:6;4336:17;4330:24;4363:53;4410:4;4399:9;4395:20;4379:14;3682:13;3675:21;3663:34;;3612:91;4363:53;;4465:4;4457:6;4453:17;4447:24;4480:53;4527:4;4516:9;4512:20;4496:14;3682:13;3675:21;3663:34;;3612:91;4480:53;;4582:4;4574:6;4570:17;4564:24;4597:53;4644:4;4633:9;4629:20;4613:14;3682:13;3675:21;3663:34;;3612:91;4597:53;;3708:948;;;;:::o;4661:984::-;4792:6;4800;4808;4816;4824;4832;4885:3;4873:9;4864:7;4860:23;4856:33;4853:53;;;4902:1;4899;4892:12;4853:53;4941:9;4928:23;4960:31;4985:5;4960:31;:::i;:::-;5010:5;-1:-1:-1;5034:63:28;5089:7;5084:2;5069:18;;5034:63;:::i;:::-;5024:73;;5149:3;5138:9;5134:19;5121:33;5163;5188:7;5163:33;:::i;:::-;5215:7;-1:-1:-1;5274:3:28;5259:19;;5246:33;5321:1;5310:22;;;5298:35;;5288:63;;5347:1;5344;5337:12;5288:63;5370:7;-1:-1:-1;5428:3:28;5413:19;;5400:33;5456:18;5445:30;;5442:50;;;5488:1;5485;5478:12;5650:409;5720:6;5728;5781:2;5769:9;5760:7;5756:23;5752:32;5749:52;;;5797:1;5794;5787:12;5749:52;5837:9;5824:23;5870:18;5862:6;5859:30;5856:50;;;5902:1;5899;5892:12;5856:50;5941:58;5991:7;5982:6;5971:9;5967:22;5941:58;:::i;:::-;6018:8;;5915:84;;-1:-1:-1;5650:409:28;-1:-1:-1;;;;5650:409:28:o;6064:546::-;6174:4;6203:2;6232;6221:9;6214:21;6264:6;6258:13;6307:6;6302:2;6291:9;6287:18;6280:34;6332:1;6342:140;6356:6;6353:1;6350:13;6342:140;;;6451:14;;;6447:23;;6441:30;6417:17;;;6436:2;6413:26;6406:66;6371:10;;6342:140;;;6346:3;6531:1;6526:2;6517:6;6506:9;6502:22;6498:31;6491:42;6601:2;6594;6590:7;6585:2;6577:6;6573:15;6569:29;6558:9;6554:45;6550:54;6542:62;;;;6064:546;;;;:::o;6615:516::-;6748:6;6756;6764;6817:3;6805:9;6796:7;6792:23;6788:33;6785:53;;;6834:1;6831;6824:12;6785:53;6873:9;6860:23;6892:31;6917:5;6892:31;:::i;:::-;6942:5;-1:-1:-1;6966:63:28;7021:7;7016:2;7001:18;;6966:63;:::i;:::-;6956:73;;7048:77;7117:7;7111:3;7100:9;7096:19;7048:77;:::i;:::-;7038:87;;6615:516;;;;;:::o;8057:810::-;8190:6;8198;8206;8214;8222;8230;8283:3;8271:9;8262:7;8258:23;8254:33;8251:53;;;8300:1;8297;8290:12;8251:53;8339:9;8326:23;8358:31;8383:5;8358:31;:::i;:::-;8408:5;-1:-1:-1;8432:63:28;8487:7;8482:2;8467:18;;8432:63;:::i;:::-;8422:73;;8542:3;8531:9;8527:19;8514:33;8504:43;;8594:3;8583:9;8579:19;8566:33;8556:43;;8650:3;8639:9;8635:19;8622:33;8678:18;8670:6;8667:30;8664:50;;;8710:1;8707;8700:12;10153:271;10336:6;10328;10323:3;10310:33;10292:3;10362:16;;10387:13;;;10362:16;10153:271;-1:-1:-1;10153:271:28:o;10637:184::-;10707:6;10760:2;10748:9;10739:7;10735:23;10731:32;10728:52;;;10776:1;10773;10766:12;10728:52;-1:-1:-1;10799:16:28;;10637:184;-1:-1:-1;10637:184:28:o",
    "linkReferences": {},
    "immutableReferences": {
      "5914": [
        {
          "start": 586,
          "length": 32
        },
        {
          "start": 660,
          "length": 32
        }
      ],
      "6464": [
        {
          "start": 523,
          "length": 32
        },
        {
          "start": 919,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "afterDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "e1b4af69",
    "afterInitialize(address,(address,address,uint24,int24,address),uint160,int24,bytes)": "a910f80f",
    "afterModifyPosition(address,(address,address,uint24,int24,address),(int24,int24,int256),int256,bytes)": "30b7cdef",
    "afterSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),int256,bytes)": "b47b2fb1",
    "beforeDonate(address,(address,address,uint24,int24,address),uint256,uint256,bytes)": "b6a8b0fa",
    "beforeInitialize(address,(address,address,uint24,int24,address),uint160,bytes)": "3440d820",
    "beforeModifyPosition(address,(address,address,uint24,int24,address),(int24,int24,int256),bytes)": "fe9a6f45",
    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160))": "b3f97f80",
    "beforeSwap(address,(address,address,uint24,int24,address),(bool,int256,uint160),bytes)": "575e24b4",
    "getHooksCalls()": "612c39b7",
    "lockAcquired(bytes)": "ab6291fe",
    "nftContract()": "d56d229d",
    "poolManager()": "dc4c90d3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"poolManager\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"contract ERC721OwnershipHook\",\"name\":\"addressToEtch\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hooks\",\"type\":\"address\"}],\"name\":\"HookAddressNotValid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"HookNotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPool\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LockFailure\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNftOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotPoolManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSelf\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"internalType\":\"struct IPoolManager.ModifyPositionParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterModifyPosition\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"BalanceDelta\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"afterSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeDonate\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"uint160\",\"name\":\"\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeInitialize\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"int256\",\"name\":\"liquidityDelta\",\"type\":\"int256\"}],\"internalType\":\"struct IPoolManager.ModifyPositionParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeModifyPosition\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"Currency\",\"name\":\"currency0\",\"type\":\"address\"},{\"internalType\":\"Currency\",\"name\":\"currency1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"internalType\":\"contract IHooks\",\"name\":\"hooks\",\"type\":\"address\"}],\"internalType\":\"struct PoolKey\",\"name\":\"\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IPoolManager.SwapParams\",\"name\":\"\",\"type\":\"tuple\"}],\"name\":\"beforeSwap\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHooksCalls\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"beforeInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterInitialize\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeModifyPosition\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterModifyPosition\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterSwap\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"beforeDonate\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"afterDonate\",\"type\":\"bool\"}],\"internalType\":\"struct Hooks.Calls\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"lockAcquired\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolManager\",\"outputs\":[{\"internalType\":\"contract IPoolManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"HookAddressNotValid(address)\":[{\"params\":{\"hooks\":\"The address of the hooks contract\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"HookAddressNotValid(address)\":[{\"notice\":\"Thrown if the address will not lead to the specified hook calls being called\"}]},\"kind\":\"user\",\"methods\":{\"nftContract()\":{\"notice\":\"NFT contract\"},\"poolManager()\":{\"notice\":\"The address of the pool manager\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/implementation/ERC721OwnershipHookImpl.sol\":\"ERC721OwnershipHookImpl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=lib/v4-core/node_modules/@ensdomains/\",\":@openzeppelin/contracts/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/\",\":@uniswap/v4-core/=lib/v4-core/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-gas-snapshot/=lib/v4-core/lib/forge-gas-snapshot/src/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=lib/v4-core/node_modules/hardhat/\",\":openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/\",\":solmate/=lib/v4-periphery/lib/solmate/src/\",\":v4-core/contracts/=lib/v4-core/contracts/\",\":v4-periphery/=lib/v4-periphery/\",\":v4-periphery/=lib/v4-periphery/contracts/\"]},\"sources\":{\"lib/v4-core/contracts/interfaces/IFees.sol\":{\"keccak256\":\"0x2fb66160acff9b1a6031e3ada15e4271b25399d6b921dc17679cde1e50f566e2\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://7bb4c14e2f3bc0c92729b3fc24f57aaaaf9bd1930411aa937afd49e2c3811bfb\",\"dweb:/ipfs/QmP8kj9hvpDhWBrjuZUmxX7UAsbbkU6bceRKHdwg66MpPK\"]},\"lib/v4-core/contracts/interfaces/IHooks.sol\":{\"keccak256\":\"0x7263c9c8fef8b2346bebfd67956b287666a8c9e1f74131789650af4945ba4523\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ef70e4a9ec5d8721fa844216d752d4135d88ad4562a00d125ae158ce40748569\",\"dweb:/ipfs/QmSSRNcCmcvTSmm87hgAMsK3zqfcPkgemqm4JzaQf92PgM\"]},\"lib/v4-core/contracts/interfaces/IPoolManager.sol\":{\"keccak256\":\"0x9945f3172250c2cb333b9f97b76c47ed77554b903bb3a08b6228e176405fd3a5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e7d35ef7b8aad0e2b66a7a175c6949ff0ab8aa6fcbad31b38fc6f318a412f1bd\",\"dweb:/ipfs/QmNYmDEEPGpt7f3e8qPwiN8nLxfaxQeRx1A55cMc9YMArm\"]},\"lib/v4-core/contracts/interfaces/external/IERC20Minimal.sol\":{\"keccak256\":\"0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92\",\"dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA\"]},\"lib/v4-core/contracts/libraries/BitMath.sol\":{\"keccak256\":\"0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be\",\"dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6\"]},\"lib/v4-core/contracts/libraries/FeeLibrary.sol\":{\"keccak256\":\"0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267\",\"dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL\"]},\"lib/v4-core/contracts/libraries/FixedPoint128.sol\":{\"keccak256\":\"0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a\",\"dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz\"]},\"lib/v4-core/contracts/libraries/FixedPoint96.sol\":{\"keccak256\":\"0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9\",\"dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc\"]},\"lib/v4-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24\",\"dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ\"]},\"lib/v4-core/contracts/libraries/Hooks.sol\":{\"keccak256\":\"0x5015985a12cecb006731861d738d79d489991ef64cddf648d5c4224c775bf28e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://c34ab145698f6c7ab48a1f0315b7782fb2179f1643d47cfa620f6509d23e8092\",\"dweb:/ipfs/QmRzyb1F9KcXTEqHeLLMc4PHZzbN4VFbxg8bRzEX33Hpfq\"]},\"lib/v4-core/contracts/libraries/Pool.sol\":{\"keccak256\":\"0xe68c53367349bf7d5ec53f10abbe32effabe41c288eea6b42de67941104e4bc7\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e69c6333c17577871f4995af3d3cdb278ad72b721a5c42d66a0b412e8b3559ed\",\"dweb:/ipfs/QmUtxoY88otDhFprbvST7LbcxacWrQrn4mZ8QfemBQDAxY\"]},\"lib/v4-core/contracts/libraries/Position.sol\":{\"keccak256\":\"0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46\",\"dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud\"]},\"lib/v4-core/contracts/libraries/SafeCast.sol\":{\"keccak256\":\"0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b\",\"dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi\"]},\"lib/v4-core/contracts/libraries/SqrtPriceMath.sol\":{\"keccak256\":\"0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188\",\"dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk\"]},\"lib/v4-core/contracts/libraries/SwapMath.sol\":{\"keccak256\":\"0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e\",\"dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv\"]},\"lib/v4-core/contracts/libraries/TickBitmap.sol\":{\"keccak256\":\"0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd\",\"dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em\"]},\"lib/v4-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78\",\"dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo\"]},\"lib/v4-core/contracts/libraries/UnsafeMath.sol\":{\"keccak256\":\"0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3\",\"dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe\"]},\"lib/v4-core/contracts/types/BalanceDelta.sol\":{\"keccak256\":\"0xb88fc16f2ae715bd796e5cdb77c2297117f18ce2183288ae4680d7f20cce5f85\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://829baa2d4becbf8f0298fcaafb2305cf57bab5bcccdf8ac10d171bbb68c37e6f\",\"dweb:/ipfs/QmPs18e2YgwJECriyft46Rp7p9iECPEpkNXV1gom5NosfF\"]},\"lib/v4-core/contracts/types/Currency.sol\":{\"keccak256\":\"0x008a7aeff6cdb7709a8e5893c9e9895a8a7ad594a0605586174e576b9888ff80\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://c773b120bacb261695d4e00973ff25359dbf3aee071d19268833cc76e71f1aa2\",\"dweb:/ipfs/QmawinVYJJSWcQH4Lo5Hh7ond58RHAjeCL13FE47a5Egcw\"]},\"lib/v4-core/contracts/types/PoolId.sol\":{\"keccak256\":\"0xd28e4ac2a0874b5372ab3873a263701ce625a840fc563c63d5ad8f7b3272f325\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0575161cdbe0c3ef8fa023a5f606563ec793bad863446822bdf310bce8dbcccd\",\"dweb:/ipfs/QmUM26Umcr3LEfM2sZ6eGtgBa2KmQde6Ea6898n8tt38mv\"]},\"lib/v4-core/contracts/types/PoolKey.sol\":{\"keccak256\":\"0x4928c59e15db5af3bff68f4d9243ebe11a1dc4a4cbfa57c564db376086a902ce\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://235245bf768c3b708be7837f6aa3bb6bcab7b25036df99e2cc257363350f6ea7\",\"dweb:/ipfs/QmWPurWV2vYoaVNxZyj4DkCqS8Aode5U9JE8WHmbyVR8jH\"]},\"lib/v4-periphery/contracts/BaseHook.sol\":{\"keccak256\":\"0x10821f78780c0524a4c7d9d672dc05033f4576f5f692253d30e1cb69276e66bf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://11762d13e86590c664d642c6d65756f8d28cb3a3e6dce5c9019e1a116abc7b9d\",\"dweb:/ipfs/QmTFpD8VkRGMUpd949aGhuPb4i9EU93cMqhkG2B6cGsbfc\"]},\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x3d2d39f4752d473bac1769f12ff0f51a747312f72a37b29251e1b839fda9b72c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://240042567f343175d52fc2fcae92bc8d0aa4c637fc6b73361728c16a26b65ead\",\"dweb:/ipfs/QmUwNd4gTK3Au7Euo95AQqQYs7GFnj3Fmzt8obUc83cngh\"]},\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0bcce5cdcd2d9fa17dc0d191b423944f44a40119e0b8ee09a844a5086f51141a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0579234e7288fdf249ba9c5abb5dad856946b6e5d250e5db8129d1bc91e8695d\",\"dweb:/ipfs/QmTKZy1MajRDkb9jjTLcJh88w6BiqWQixUK32yZFEiUSmN\"]},\"lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]},\"src/ERC721OwnershipHook.sol\":{\"keccak256\":\"0xfda18d53be1ce4b983a60b0765c14b6b4680c186646206be2da0d73bffb62277\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6be5383e5aef89bcec3b9f71fb16bac7ffd421874383406e499d0ee2359b3298\",\"dweb:/ipfs/QmdEdpcHRbVi2TXvMEgVAhYQCoeP5eXMwpigBrd9bSg26z\"]},\"src/implementation/ERC721OwnershipHookImpl.sol\":{\"keccak256\":\"0xec31ff4d6dd1fb2df6062c36746fb3c9c2a969133c7e467ff3b6991e5b7ba762\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77846ea3117c814d7f56bc8e4bfd044494f2d6c549db9695ee80b8bbb8e165b4\",\"dweb:/ipfs/QmY1WzSMHEw3kDTdGHmgmyi1VxL7rDcq7g4VTffAGaTET6\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "poolManager",
              "type": "address"
            },
            {
              "internalType": "contract IERC721",
              "name": "nftAddress",
              "type": "address"
            },
            {
              "internalType": "contract ERC721OwnershipHook",
              "name": "addressToEtch",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "hooks",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "HookAddressNotValid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "HookNotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidPool"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "LockFailure"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotNftOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotPoolManager"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotSelf"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterDonate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            },
            {
              "internalType": "int24",
              "name": "",
              "type": "int24"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterInitialize",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyPositionParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterModifyPosition",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "BalanceDelta",
              "name": "",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "afterSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeDonate",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint160",
              "name": "",
              "type": "uint160"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeInitialize",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.ModifyPositionParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "int24",
                  "name": "tickLower",
                  "type": "int24"
                },
                {
                  "internalType": "int24",
                  "name": "tickUpper",
                  "type": "int24"
                },
                {
                  "internalType": "int256",
                  "name": "liquidityDelta",
                  "type": "int256"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeModifyPosition",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "struct PoolKey",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "Currency",
                  "name": "currency0",
                  "type": "address"
                },
                {
                  "internalType": "Currency",
                  "name": "currency1",
                  "type": "address"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                },
                {
                  "internalType": "int24",
                  "name": "tickSpacing",
                  "type": "int24"
                },
                {
                  "internalType": "contract IHooks",
                  "name": "hooks",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "struct IPoolManager.SwapParams",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "zeroForOne",
                  "type": "bool"
                },
                {
                  "internalType": "int256",
                  "name": "amountSpecified",
                  "type": "int256"
                },
                {
                  "internalType": "uint160",
                  "name": "sqrtPriceLimitX96",
                  "type": "uint160"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "beforeSwap",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getHooksCalls",
          "outputs": [
            {
              "internalType": "struct Hooks.Calls",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "beforeInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterInitialize",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeModifyPosition",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterModifyPosition",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeSwap",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterSwap",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "beforeDonate",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "afterDonate",
                  "type": "bool"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "lockAcquired",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nftContract",
          "outputs": [
            {
              "internalType": "contract IERC721",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolManager",
          "outputs": [
            {
              "internalType": "contract IPoolManager",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "nftContract()": {
            "notice": "NFT contract"
          },
          "poolManager()": {
            "notice": "The address of the pool manager"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@ensdomains/=lib/v4-core/node_modules/@ensdomains/",
        "@openzeppelin/contracts/=lib/v4-periphery/lib/openzeppelin-contracts/contracts/",
        "@uniswap/v4-core/=lib/v4-core/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-gas-snapshot/=lib/v4-core/lib/forge-gas-snapshot/src/",
        "forge-std/=lib/forge-std/src/",
        "hardhat/=lib/v4-core/node_modules/hardhat/",
        "openzeppelin-contracts/=lib/v4-periphery/lib/openzeppelin-contracts/",
        "solmate/=lib/v4-periphery/lib/solmate/src/",
        "v4-core/contracts/=lib/v4-core/contracts/",
        "v4-periphery/=lib/v4-periphery/",
        "v4-periphery/=lib/v4-periphery/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/implementation/ERC721OwnershipHookImpl.sol": "ERC721OwnershipHookImpl"
      },
      "libraries": {}
    },
    "sources": {
      "lib/v4-core/contracts/interfaces/IFees.sol": {
        "keccak256": "0x2fb66160acff9b1a6031e3ada15e4271b25399d6b921dc17679cde1e50f566e2",
        "urls": [
          "bzz-raw://7bb4c14e2f3bc0c92729b3fc24f57aaaaf9bd1930411aa937afd49e2c3811bfb",
          "dweb:/ipfs/QmP8kj9hvpDhWBrjuZUmxX7UAsbbkU6bceRKHdwg66MpPK"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/interfaces/IHooks.sol": {
        "keccak256": "0x7263c9c8fef8b2346bebfd67956b287666a8c9e1f74131789650af4945ba4523",
        "urls": [
          "bzz-raw://ef70e4a9ec5d8721fa844216d752d4135d88ad4562a00d125ae158ce40748569",
          "dweb:/ipfs/QmSSRNcCmcvTSmm87hgAMsK3zqfcPkgemqm4JzaQf92PgM"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/interfaces/IPoolManager.sol": {
        "keccak256": "0x9945f3172250c2cb333b9f97b76c47ed77554b903bb3a08b6228e176405fd3a5",
        "urls": [
          "bzz-raw://e7d35ef7b8aad0e2b66a7a175c6949ff0ab8aa6fcbad31b38fc6f318a412f1bd",
          "dweb:/ipfs/QmNYmDEEPGpt7f3e8qPwiN8nLxfaxQeRx1A55cMc9YMArm"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/interfaces/external/IERC20Minimal.sol": {
        "keccak256": "0x8dc5ee72426906aeb12f4ae6a2426df059491739bd5cbdb8ea4a3e26970436c6",
        "urls": [
          "bzz-raw://f7e30dbbc972cb78d169c8845d6210d27490c8534e68a20d4f296b11ec727b92",
          "dweb:/ipfs/QmXBvaWaAnPW25YGVm2sMbf5mwrzLapUcqPnrNiiGGXxmA"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/BitMath.sol": {
        "keccak256": "0x652cd36970d953b3067c766b3b0c0063d4c403eba7352df09ec10dcc868910d9",
        "urls": [
          "bzz-raw://e357b092171edb755c8514b4b4ae758a8b43458c7a23409ebf5afd325fefa2be",
          "dweb:/ipfs/QmWKRWT2z15cVbVVDkjqdVnpf8Ck1jytcXbA7zCUevp7b6"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/FeeLibrary.sol": {
        "keccak256": "0x9fc00b77978b617d1a9b5c9d024210b43ee5455682982703d3009bfafc1c12b4",
        "urls": [
          "bzz-raw://777acadfdbd1b3c01aa780b2dff49771ae6189e421b7e23be38c2db75b9c1267",
          "dweb:/ipfs/QmUR443r39JFuYjLi6zCWnW7r15u1gbmkuEd6e43Br4gyL"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/FixedPoint128.sol": {
        "keccak256": "0x1f015a7a107f4c471985a958f1bfbc1710948f9bcd3786a02310bc0ad5080c69",
        "urls": [
          "bzz-raw://a1cacac08675284f319d151f6bc5d1c66cf1d54c5dad1c620a2e1e1336cbb93a",
          "dweb:/ipfs/QmPf8vQ3mBqniKHwvS1DDEFrV5dJfZSL6mMi9JVy6omQaz"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/FixedPoint96.sol": {
        "keccak256": "0x7731aeeba692b0ca5dac8f27803ec9e5ce98795a554c09ae05c220861bd0314e",
        "urls": [
          "bzz-raw://963a8155e442d31c4541c387d333db0c02941ae3517e9173ad30ebcb4f6a14e9",
          "dweb:/ipfs/QmevAr8oG4WSoi5gBqQ53VzBuFbDKoZHfJwjuTmVhzm8Tc"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/FullMath.sol": {
        "keccak256": "0x6d8760794ed38264579c5da7b2afe8ff5543de999180850bc08687b77dce36ea",
        "urls": [
          "bzz-raw://0e72da6f868ba5f5c829f78f649286c6b5922a8cda0317dfbb156b8a4d27fb24",
          "dweb:/ipfs/QmUQDZciNFhy4AFGXfYvoy22ihPc7ehvypeRVQwvVcD3vJ"
        ],
        "license": "MIT"
      },
      "lib/v4-core/contracts/libraries/Hooks.sol": {
        "keccak256": "0x5015985a12cecb006731861d738d79d489991ef64cddf648d5c4224c775bf28e",
        "urls": [
          "bzz-raw://c34ab145698f6c7ab48a1f0315b7782fb2179f1643d47cfa620f6509d23e8092",
          "dweb:/ipfs/QmRzyb1F9KcXTEqHeLLMc4PHZzbN4VFbxg8bRzEX33Hpfq"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/contracts/libraries/Pool.sol": {
        "keccak256": "0xe68c53367349bf7d5ec53f10abbe32effabe41c288eea6b42de67941104e4bc7",
        "urls": [
          "bzz-raw://e69c6333c17577871f4995af3d3cdb278ad72b721a5c42d66a0b412e8b3559ed",
          "dweb:/ipfs/QmUtxoY88otDhFprbvST7LbcxacWrQrn4mZ8QfemBQDAxY"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/contracts/libraries/Position.sol": {
        "keccak256": "0x1319e4c172e31427c3b3521dd3c9c9c3949da22e25c9919ae57c47a8c9328e43",
        "urls": [
          "bzz-raw://1e0885e8e035681836fe02213e165d1ab48cf2488cf6ba8f01964b4b026d2b46",
          "dweb:/ipfs/QmR4W3DZYYvctASLFnm7Sf4wk2L77gwNRrTS2mBqtiUaud"
        ],
        "license": "BUSL-1.1"
      },
      "lib/v4-core/contracts/libraries/SafeCast.sol": {
        "keccak256": "0xb459cbf9f2cda4c38c11916e888cc2afbe4297c5ae6f50a0976eb83ed0dc9b25",
        "urls": [
          "bzz-raw://5608698d33b18d3f49e3fa1fbdf6e7c6383378f7d53c914dcf14a0411cf7a79b",
          "dweb:/ipfs/QmbF4VWDcTPzH17aczU6eCUcqTp9Be7xiuBGB5TMWmtJAi"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/SqrtPriceMath.sol": {
        "keccak256": "0x62cb03c7ce6ce037c82fa74e5aabb2431d6b4ddbca1458efdabf5d6af9ca6f90",
        "urls": [
          "bzz-raw://206e025889f55aa8e5d9db2f846460394b54d6dc6d80a5e4ca1d4b70edd98188",
          "dweb:/ipfs/QmNSzKqtUDXHzgXXDjdNv3ZnHZE3LU4KhwNmkrcWtTRGqk"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/SwapMath.sol": {
        "keccak256": "0xac5b75b36ff928e88cbec828bdc9db03e681cc3b337d5d7f6be9fd617b3fef7f",
        "urls": [
          "bzz-raw://6aaea2ecabdb3fec93c7c6be19ea3a034cf396a59ab96f61c57b5214c04b5a6e",
          "dweb:/ipfs/QmYyd4ExT6xbvEHZTQBv9nZuvU6xjB6EN4uY8TmK8Tceqv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/TickBitmap.sol": {
        "keccak256": "0x7cccb8dff4c76da872a827f1549dc44cdff384d123e77a5361a02a31902bf15c",
        "urls": [
          "bzz-raw://88f850cd5bd2bbada4d9514f2516804392c7b23dc2cb541b74e9c88d0a351dcd",
          "dweb:/ipfs/QmZh9LvKUG23oFUZXAAa5gn77MguAbZ41VGjkES5U8N9Em"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/TickMath.sol": {
        "keccak256": "0xadffea78a3eed37613b57766d87c0bdb9454d2df39de90d7a450e4a8b3207e56",
        "urls": [
          "bzz-raw://c5043430807061e5ccc82986c59b2e074457ff608111a8bd51b413ceaf661c78",
          "dweb:/ipfs/QmXjqKzCrngzidTRmuLUFvwNPqMKtd8xVFLVCycRfEQcWo"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/libraries/UnsafeMath.sol": {
        "keccak256": "0x2a8cb75af05f8557b698b089a0ab19e24279fffb7e87cddf5794404c7eaf1c69",
        "urls": [
          "bzz-raw://85f68e6d614205f3f0f55f6ac41805e3a7d523d95bda1c443f2e75444443ffe3",
          "dweb:/ipfs/QmdCheMqxWNx4CbxG5MH9BUQeSMeeXF6DHkf7Aax4duRUe"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/types/BalanceDelta.sol": {
        "keccak256": "0xb88fc16f2ae715bd796e5cdb77c2297117f18ce2183288ae4680d7f20cce5f85",
        "urls": [
          "bzz-raw://829baa2d4becbf8f0298fcaafb2305cf57bab5bcccdf8ac10d171bbb68c37e6f",
          "dweb:/ipfs/QmPs18e2YgwJECriyft46Rp7p9iECPEpkNXV1gom5NosfF"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/types/Currency.sol": {
        "keccak256": "0x008a7aeff6cdb7709a8e5893c9e9895a8a7ad594a0605586174e576b9888ff80",
        "urls": [
          "bzz-raw://c773b120bacb261695d4e00973ff25359dbf3aee071d19268833cc76e71f1aa2",
          "dweb:/ipfs/QmawinVYJJSWcQH4Lo5Hh7ond58RHAjeCL13FE47a5Egcw"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/types/PoolId.sol": {
        "keccak256": "0xd28e4ac2a0874b5372ab3873a263701ce625a840fc563c63d5ad8f7b3272f325",
        "urls": [
          "bzz-raw://0575161cdbe0c3ef8fa023a5f606563ec793bad863446822bdf310bce8dbcccd",
          "dweb:/ipfs/QmUM26Umcr3LEfM2sZ6eGtgBa2KmQde6Ea6898n8tt38mv"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-core/contracts/types/PoolKey.sol": {
        "keccak256": "0x4928c59e15db5af3bff68f4d9243ebe11a1dc4a4cbfa57c564db376086a902ce",
        "urls": [
          "bzz-raw://235245bf768c3b708be7837f6aa3bb6bcab7b25036df99e2cc257363350f6ea7",
          "dweb:/ipfs/QmWPurWV2vYoaVNxZyj4DkCqS8Aode5U9JE8WHmbyVR8jH"
        ],
        "license": "GPL-2.0-or-later"
      },
      "lib/v4-periphery/contracts/BaseHook.sol": {
        "keccak256": "0x10821f78780c0524a4c7d9d672dc05033f4576f5f692253d30e1cb69276e66bf",
        "urls": [
          "bzz-raw://11762d13e86590c664d642c6d65756f8d28cb3a3e6dce5c9019e1a116abc7b9d",
          "dweb:/ipfs/QmTFpD8VkRGMUpd949aGhuPb4i9EU93cMqhkG2B6cGsbfc"
        ],
        "license": "UNLICENSED"
      },
      "lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x3d2d39f4752d473bac1769f12ff0f51a747312f72a37b29251e1b839fda9b72c",
        "urls": [
          "bzz-raw://240042567f343175d52fc2fcae92bc8d0aa4c637fc6b73361728c16a26b65ead",
          "dweb:/ipfs/QmUwNd4gTK3Au7Euo95AQqQYs7GFnj3Fmzt8obUc83cngh"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x0bcce5cdcd2d9fa17dc0d191b423944f44a40119e0b8ee09a844a5086f51141a",
        "urls": [
          "bzz-raw://0579234e7288fdf249ba9c5abb5dad856946b6e5d250e5db8129d1bc91e8695d",
          "dweb:/ipfs/QmTKZy1MajRDkb9jjTLcJh88w6BiqWQixUK32yZFEiUSmN"
        ],
        "license": "MIT"
      },
      "lib/v4-periphery/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835",
        "urls": [
          "bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7",
          "dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn"
        ],
        "license": "MIT"
      },
      "src/ERC721OwnershipHook.sol": {
        "keccak256": "0xfda18d53be1ce4b983a60b0765c14b6b4680c186646206be2da0d73bffb62277",
        "urls": [
          "bzz-raw://6be5383e5aef89bcec3b9f71fb16bac7ffd421874383406e499d0ee2359b3298",
          "dweb:/ipfs/QmdEdpcHRbVi2TXvMEgVAhYQCoeP5eXMwpigBrd9bSg26z"
        ],
        "license": "MIT"
      },
      "src/implementation/ERC721OwnershipHookImpl.sol": {
        "keccak256": "0xec31ff4d6dd1fb2df6062c36746fb3c9c2a969133c7e467ff3b6991e5b7ba762",
        "urls": [
          "bzz-raw://77846ea3117c814d7f56bc8e4bfd044494f2d6c549db9695ee80b8bbb8e165b4",
          "dweb:/ipfs/QmY1WzSMHEw3kDTdGHmgmyi1VxL7rDcq7g4VTffAGaTET6"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/implementation/ERC721OwnershipHookImpl.sol",
    "id": 6582,
    "exportedSymbols": {
      "BaseHook": [
        6193
      ],
      "ERC721OwnershipHook": [
        6533
      ],
      "ERC721OwnershipHookImpl": [
        6581
      ],
      "Hooks": [
        1585
      ],
      "IERC721": [
        6433
      ],
      "IPoolManager": [
        556
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:814:27",
    "nodes": [
      {
        "id": 6535,
        "nodeType": "PragmaDirective",
        "src": "39:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 6537,
        "nodeType": "ImportDirective",
        "src": "65:63:27",
        "nodes": [],
        "absolutePath": "src/ERC721OwnershipHook.sol",
        "file": "../ERC721OwnershipHook.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6582,
        "sourceUnit": 6534,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6536,
              "name": "ERC721OwnershipHook",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6533,
              "src": "73:19:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6539,
        "nodeType": "ImportDirective",
        "src": "130:71:27",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/contracts/BaseHook.sol",
        "file": "../../lib/v4-periphery/contracts/BaseHook.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6582,
        "sourceUnit": 6194,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6538,
              "name": "BaseHook",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6193,
              "src": "138:8:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6541,
        "nodeType": "ImportDirective",
        "src": "202:85:27",
        "nodes": [],
        "absolutePath": "lib/v4-core/contracts/interfaces/IPoolManager.sol",
        "file": "../../lib/v4-core/contracts/interfaces/IPoolManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6582,
        "sourceUnit": 557,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6540,
              "name": "IPoolManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 556,
              "src": "210:12:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6543,
        "nodeType": "ImportDirective",
        "src": "288:70:27",
        "nodes": [],
        "absolutePath": "lib/v4-core/contracts/libraries/Hooks.sol",
        "file": "../../lib/v4-core/contracts/libraries/Hooks.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6582,
        "sourceUnit": 1586,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6542,
              "name": "Hooks",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1585,
              "src": "296:5:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6545,
        "nodeType": "ImportDirective",
        "src": "359:73:27",
        "nodes": [],
        "absolutePath": "lib/v4-periphery/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6582,
        "sourceUnit": 6434,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6544,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6433,
              "src": "367:7:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6581,
        "nodeType": "ContractDefinition",
        "src": "434:418:27",
        "nodes": [
          {
            "id": 6572,
            "nodeType": "FunctionDefinition",
            "src": "496:242:27",
            "nodes": [],
            "body": {
              "id": 6571,
              "nodeType": "Block",
              "src": "664:74:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6566,
                        "name": "addressToEtch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6556,
                        "src": "700:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721OwnershipHook_$6533",
                          "typeString": "contract ERC721OwnershipHook"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6567,
                          "name": "getHooksCalls",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            6503
                          ],
                          "referencedDeclaration": 6503,
                          "src": "715:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Calls_$1250_memory_ptr_$",
                            "typeString": "function () pure returns (struct Hooks.Calls memory)"
                          }
                        },
                        "id": 6568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "715:15:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Calls_$1250_memory_ptr",
                          "typeString": "struct Hooks.Calls memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC721OwnershipHook_$6533",
                          "typeString": "contract ERC721OwnershipHook"
                        },
                        {
                          "typeIdentifier": "t_struct$_Calls_$1250_memory_ptr",
                          "typeString": "struct Hooks.Calls memory"
                        }
                      ],
                      "expression": {
                        "id": 6563,
                        "name": "Hooks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1585,
                        "src": "674:5:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hooks_$1585_$",
                          "typeString": "type(library Hooks)"
                        }
                      },
                      "id": 6565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "680:19:27",
                      "memberName": "validateHookAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1333,
                      "src": "674:25:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_contract$_IHooks_$186_$_t_struct$_Calls_$1250_memory_ptr_$returns$__$",
                        "typeString": "function (contract IHooks,struct Hooks.Calls memory) pure"
                      }
                    },
                    "id": 6569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "674:57:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6570,
                  "nodeType": "ExpressionStatement",
                  "src": "674:57:27"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6559,
                    "name": "poolManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6550,
                    "src": "639:11:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$556",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  {
                    "id": 6560,
                    "name": "nftAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6553,
                    "src": "652:10:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$6433",
                      "typeString": "contract IERC721"
                    }
                  }
                ],
                "id": 6561,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 6558,
                  "name": "ERC721OwnershipHook",
                  "nameLocations": [
                    "619:19:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6533,
                  "src": "619:19:27"
                },
                "nodeType": "ModifierInvocation",
                "src": "619:44:27"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6550,
                  "mutability": "mutable",
                  "name": "poolManager",
                  "nameLocation": "530:11:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6572,
                  "src": "517:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPoolManager_$556",
                    "typeString": "contract IPoolManager"
                  },
                  "typeName": {
                    "id": 6549,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6548,
                      "name": "IPoolManager",
                      "nameLocations": [
                        "517:12:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 556,
                      "src": "517:12:27"
                    },
                    "referencedDeclaration": 556,
                    "src": "517:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPoolManager_$556",
                      "typeString": "contract IPoolManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6553,
                  "mutability": "mutable",
                  "name": "nftAddress",
                  "nameLocation": "559:10:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6572,
                  "src": "551:18:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC721_$6433",
                    "typeString": "contract IERC721"
                  },
                  "typeName": {
                    "id": 6552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6551,
                      "name": "IERC721",
                      "nameLocations": [
                        "551:7:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6433,
                      "src": "551:7:27"
                    },
                    "referencedDeclaration": 6433,
                    "src": "551:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$6433",
                      "typeString": "contract IERC721"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6556,
                  "mutability": "mutable",
                  "name": "addressToEtch",
                  "nameLocation": "599:13:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6572,
                  "src": "579:33:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721OwnershipHook_$6533",
                    "typeString": "contract ERC721OwnershipHook"
                  },
                  "typeName": {
                    "id": 6555,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6554,
                      "name": "ERC721OwnershipHook",
                      "nameLocations": [
                        "579:19:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6533,
                      "src": "579:19:27"
                    },
                    "referencedDeclaration": 6533,
                    "src": "579:19:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC721OwnershipHook_$6533",
                      "typeString": "contract ERC721OwnershipHook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "507:111:27"
            },
            "returnParameters": {
              "id": 6562,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "664:0:27"
            },
            "scope": 6581,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6580,
            "nodeType": "FunctionDefinition",
            "src": "780:70:27",
            "nodes": [],
            "body": {
              "id": 6579,
              "nodeType": "Block",
              "src": "848:2:27",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              5997
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateHookAddress",
            "nameLocation": "789:19:27",
            "overrides": {
              "id": 6577,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "839:8:27"
            },
            "parameters": {
              "id": 6576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6575,
                  "mutability": "mutable",
                  "name": "_this",
                  "nameLocation": "818:5:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 6580,
                  "src": "809:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_BaseHook_$6193",
                    "typeString": "contract BaseHook"
                  },
                  "typeName": {
                    "id": 6574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6573,
                      "name": "BaseHook",
                      "nameLocations": [
                        "809:8:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6193,
                      "src": "809:8:27"
                    },
                    "referencedDeclaration": 6193,
                    "src": "809:8:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BaseHook_$6193",
                      "typeString": "contract BaseHook"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "808:16:27"
            },
            "returnParameters": {
              "id": 6578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:27"
            },
            "scope": 6581,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6546,
              "name": "ERC721OwnershipHook",
              "nameLocations": [
                "470:19:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6533,
              "src": "470:19:27"
            },
            "id": 6547,
            "nodeType": "InheritanceSpecifier",
            "src": "470:19:27"
          }
        ],
        "canonicalName": "ERC721OwnershipHookImpl",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6581,
          6533,
          6193,
          186
        ],
        "name": "ERC721OwnershipHookImpl",
        "nameLocation": "443:23:27",
        "scope": 6582,
        "usedErrors": [
          1255,
          5902,
          5904,
          5906,
          5908,
          5910,
          6466
        ],
        "usedEvents": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 27
}